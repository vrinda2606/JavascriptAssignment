25.  
function alphabetize_string(str) { 
    return str.split('').sort().join(''); 
} 
console.log(alphabetize_string('United States'));  
. 
26.  
function remove_first_occurrence(str, searchStr) { 
    let index = str.indexOf(searchStr); 
    if (index !== -1) { 
        return str.slice(0, index) + str.slice(index + searchStr.length); 
    } 
    return str; 
} 
console.log(remove_first_occurrence("The quick brown fox jumps over the lazy dog", 'the')); 
 
. 
27.  
function ascii_to_hexa(str) { 
    let hex = ''; 
    for (let i = 0; i < str.length; i++) { 
        hex += str.charCodeAt(i).toString(16); 
    } 
    return hex; 
} 
console.log(ascii_to_hexa('12'));   
console.log(ascii_to_hexa('100'));  
 
. 
28.  
function hex_to_ascii(hex) { 
    let str = ''; 
    for (let i = 0; i < hex.length; i += 2) { 
        str += String.fromCharCode(parseInt(hex.substr(i, 2), 16)); 
    } 
    return str; 
} 
console.log(hex_to_ascii('3132'));  
console.log(hex_to_ascii('313030')); 
. 
29.  
function search_word(str, word) { 
    let count = (str.match(new RegExp(word, 'gi')) || []).length; 
    return `'${word}' was found ${count} times.`; 
} 
console.log(search_word('The quick brown fox', 'fox'));  
console.log(search_word('aa, bb, cc, dd, aa', 'aa'));  
. 
30.  
function string_endsWith(str, suffix) { 
    return str.endsWith(suffix); 
} 
console.log(string_endsWith('JS PHP PYTHON', 'PYTHON')); 
console.log(string_endsWith('JS PHP PYTHON', '')); 
. 
 
31. 
function escape_html(str) {  
 return str.replace(/&/g, "&amp;")  
           .replace(/</g, "&lt;")  
           .replace(/>/g, "&gt;")  
           .replace(/'/g, "&#39;")  
           .replace(/"/g, "&quot;");  
  }  
console.log(escape_html('PHP & MySQL'));  
console.log(escape_html('3 > 2')); 
 
32.   
function remove_non_ascii(str) {  
 return str.replace(/[^\x20-\x7E]/g, "");  
}  
console.log(remove_non_ascii('äÄçÇéÉêPHPMySQLöÖÐþúÚ')  
  
33.  
function remove_non_word(str) {  
 return str.replace(/[^\w\s-]/g, "");  
}  
console.log(remove_non_word('PHP ~!@#$%^&*()+`-={}[]|\\:";\'/?><., MySQL'));   
34.  
function sentenceCase(str) {  
return str.replace(/(^\w|\.\s*\w)/g, function(match) {  
return match.toUpperCase();  
});  
}  
console.log(sentenceCase('PHP exercises. python exercises.'));  
35.  
function strip_html_tags(str) {  
return str.replace(/<\/?[^>]+(>|$)/g, "");  
}  
console.log(strip_html_tags('<p><strong><em>PHP Exercises</em></strong></p>'));  
36.  
function zeroFill(value, width, sign) {  
const prefix = sign === '-' ? '-' : '+';  
const absValue = Math.abs(value).toString();  
const paddedValue = absValue.padStart(width,'0');  
return (value < 0 ? '-' : prefix) + paddedValue;  
}  
console.log(zeroFill(120, 5, '-'));  
console.log(zeroFill(29, 4));        
37.  
function compare_strings(str1, str2) {  
return str1.localeCompare(str2, undefined, {sensitivity: 'accent'}) === 0;  
}  
console.log(compare_strings('abcd', 'AbcD'));  
console.log(compare_strings('ABCD', 'Abce')); 
38.  
function case_insensitive_search(text, query) {  
const lowerText = text.toLowerCase();  
const lowerQuery = query.toLowerCase();  
return lowerText.includes(lowerQuery) ? "Matched": "Not Matched";  
}  
console.log(case_insensitive_search('JavaScript Exercises', 'exercises'));  
console.log(case_insensitive_search('JavaScript Exercises', 'Exercises'));  
console.log(case_insensitive_search('JavaScript Exercises', 'Exercisess'));  
